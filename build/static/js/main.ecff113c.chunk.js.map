{"version":3,"sources":["components/Flashcard.js","utils/api.js","components/AddCard.js","App.js","index.js"],"names":["Flashcard","props","useState","flip","setFlip","className","onClick","flashcards","index","definition","term","SAMPLE_FLASHCARDS","React","Component","id","firebase","require","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","document","getElementById","database","ref","child","on","snap","console","log","val","App","setIndex","ReactDOM","render","StrictMode"],"mappings":"oRAIe,SAASA,EAAUC,GAAQ,IAAD,EACfC,oBAAS,GADM,mBAChCC,EADgC,KAC1BC,EAD0B,KAGvC,OAEE,yBAAKC,UAAS,eAAUF,EAAO,OAAS,IACtCG,QAAS,kBAAMF,GAASD,KACxB,wBAAIE,UAAW,QAASF,EAAOF,EAAMM,WAAWN,EAAMO,OAAOC,WAAaR,EAAMM,WAAWN,EAAMO,OAAOE,O,wCCTxGC,G,OCCgBC,IAAMC,U,ODDF,CACxB,CACEC,GAAI,EACJJ,KAAM,QACND,WAAY,iBAEd,CACEK,GAAI,EACJJ,KAAM,SACND,WAAY,kBACX,CACDK,GAAI,EACJJ,KAAM,SACND,WAAY,sBEPhB,IAAIM,EAAWC,EAAQ,KACvBA,EAAQ,KACRA,EAAQ,KAcHD,EAASE,KAAKC,QACjBH,EAASI,cAbU,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,4CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAOjBZ,EAASa,YAESC,SAASC,eAAe,UAC3BD,SAASC,eAAe,QAEnBf,EAASgB,WAAWC,MAAMC,MAAM,SACtBA,MAAM,UAE1BC,GAAG,SAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,EAAKG,UAwEhCC,MA/Cf,WAAgB,IAAD,EAEuBrC,mBF1C7BS,GEwCM,mBAENJ,EAFM,aAIaL,mBAAS,IAJtB,mBAINM,EAJM,KAICgC,EAJD,KA4Bb,OACE,yBAAKnC,UAAU,kBACb,4BAAQA,UAAU,aAAaC,QANnC,WACE,OAAO,6CAKL,YACA,kBAAC,EAAD,CAAWC,WAAYA,EAAYC,MAAOA,IAC1C,6BACE,4BAAQH,UAAU,WAAWC,QApBnC,WACME,EAAQ,EAAI,GACdgC,EAAShC,EAAQ,KAkBf,SAEF,6BACE,4BAAQH,UAAU,WAAWC,QA7BnC,WACME,EAAQ,EAAID,EAAWW,QACzBsB,EAAShC,EAAQ,KA2Bf,WC1FRiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFd,SAASC,eAAe,W","file":"static/js/main.ecff113c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Flashcard.css';\n\n\nexport default function Flashcard(props) {\n  const [flip, setFlip] = useState(false)\n\n  return (\n\n    <div className={`card ${flip ? 'flip' : ''}`}\n      onClick={() => setFlip(!flip)}>\n      <h2 className={'term'}>{flip ? props.flashcards[props.index].definition : props.flashcards[props.index].term}</h2>\n    </div>\n  )\n}\n","// import { AsyncStorage } from 'react-native'\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    term: 'Apple',\n    definition: 'a yummy fruit'\n  },\n  {\n    id: 2,\n    term: 'Banana',\n    definition: 'a yellow fruit'\n  }, {\n    id: 3,\n    term: 'Orange',\n    definition: 'vitamin c source'\n  }\n]\n\nexport const getData = () => {\n  return SAMPLE_FLASHCARDS\n}\n\nexport function addCardToList(list, card) {\n\n}","import React, { useState } from 'react';\nimport { render } from '@testing-library/react';\n\nclass AddCard extends React.Component {\n\n  state = {\n    term: '',\n    definition: ''\n  }\n\n  sub\n\n  render() {\n    return (\n      <div>\n        <form>\n          <h1>Create a new card</h1>\n          <label>Term</label>\n          <input type=\"text\" placeholder=\"Enter Term\" />\n          <label>Definition</label>\n          <input type=\"text\" placeholder=\"Enter Definition\" />\n          <input type=\"submit\"></input>\n        </form>\n      </div>\n    )\n  };\n}\n\n// export default AddCard();","import React, { useState } from 'react';\nimport FlashcardList from './components/FlashcardList';\nimport Flashcard from './components/Flashcard';\nimport AddCard from './components/AddCard';\nimport './App.css';\nimport { getData } from './utils/api.js';\n\n\nvar firebase = require(\"firebase/app\");\nrequire(\"firebase/database\");\nrequire(\"firebase/analytics\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBWhtKWxnPdL5DjiwZdz2aCa2Py3xm4zu4\",\n  authDomain: \"flashycards-221e2.firebaseapp.com\",\n  databaseURL: \"https://flashycards-221e2.firebaseio.com/\",\n  projectId: \"flashycards-221e2\",\n  storageBucket: \"flashycards-221e2.appspot.com\",\n  messagingSenderId: \"79644345793\",\n  appId: \"1:79644345793:web:7c30bae7f50472062b9b40\",\n  measurementId: \"G-W7CQFGWZC3\"\n};\n\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig)\n}\nfirebase.analytics();\n\nconst preObject = document.getElementById('object');\nconst ulList = document.getElementById('list');\n\nconst dbRefObject = firebase.database().ref().child('lists');\nconst dbRefList = dbRefObject.child('sample')\n\ndbRefList.on('value', snap => console.log(snap.val()));\n// dbRefObject.on('value', snap => console.log(snap.val()));\n\n// dbRefObject.on('value', snap =>\n//   preObject.innerText = JSON.stringify(snap.val(), null, 3)\n// );\n\n\n// dbRefList.on('child_added', snap => {\n//   const li = document.createElement('li');\n//   li.innerText = snap.key + \": \" + snap.val();\n//   li.id = snap.key\n//   ulList.appendChild(li);\n// });\n\n// dbRefList.on('child_changed', snap => {\n//   const liChanged = document.getElementById(snap.key);\n//   liChanged.innerText = snap.val();\n// })\n\n// dbRefList.on('child_removed', snap => {\n//   const litoRemove = document.getElementById(snap.key);\n//   liToRemove.remove();\n// })\n\nfunction App() {\n\n  const [flashcards, setFlashcards] = useState(getData());\n  // const [flashcards, setFlashcards] = useState(dbRefList);\n  const [index, setIndex] = useState(0);\n\n\n  function nextCard() {\n    if (index + 1 < flashcards.length) {\n      setIndex(index + 1);\n    }\n  }\n\n  function prevCard() {\n    if (index - 1 > 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  function createList() {\n    return <FlashcardList flashcards={flashcards} />\n\n  }\n\n  function addCard() {\n    return <p>HELLO WORLD </p>;\n  }\n\n  return (\n    <div className=\"card_container\">\n      <button className=\"createlist\" onClick={addCard}>Add Card</button>\n      <Flashcard flashcards={flashcards} index={index} />\n      <div>\n        <button className=\"prevcard\" onClick={prevCard}>Prev</button>\n      </div>\n      <div>\n        <button className=\"nextcard\" onClick={nextCard}>Next</button>\n      </div>\n\n\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}